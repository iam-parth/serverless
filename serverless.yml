service: parth
app: new-serverless-app
org: parth

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource: 
        - "*"
functions:
  FlangedJointHistoriesReceived:
    handler: handler.hello
 
  FlangedJointHistoriesBrij:
    handler: handler.brij
resources:
  Resources:
    FlangedJointHistoriesReceivedDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}FlangedJointHistoriesReceivedDeadLetter
        MessageRetentionPeriod: 1209600 # 14 days in seconds
    FlangedJointHistoriesReceivedLambdaFunction:
      Type: AWS::Lambda::Function
      Properties:
         DeadLetterConfig:
           TargetArn:
             "Fn::GetAtt": [FlangedJointHistoriesReceivedDeadLetterQueue, Arn]

    AlarmFlangedJointHistoriesReceivedDLQ:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Triggers an alarm if any message comes in ${self:service}FlangedJointHistoriesReceivedDeadLetter
        AlarmName: ${self:provider.stage}-${self:service}-FlangedJointHistoriesReceivedDLQ-Alarm
        AlarmActions:
          - Fn::Join:
              - ':'
              - - 'arn:aws:sns'
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - "${self:service}Alarm-${self:provider.stage}"
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 1
        Namespace: "AWS/SQS"
        EvaluationPeriods: 1
        MetricName: ApproximateNumberOfMessagesVisible
        Period: 60
        Statistic: Minimum
        Dimensions:
          - Name: QueueName
            Value:
              "Fn::GetAtt": [FlangedJointHistoriesReceivedDeadLetterQueue, QueueName]
        TreatMissingData: notBreaching
